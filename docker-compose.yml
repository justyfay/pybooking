version: '1.0'
services:
  postgres:
    image: postgres:16.2
    container_name: postgres_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    depends_on:
      - postgres
    ports:
      - 5050:80

  redis:
    image: redis:7.2.4
    container_name: redis_db
    restart: always
    ports:
      - 6379:6379

  pyboking:
    image: pybooking_image
    container_name: pybooking_app
    build:
      context: .
    env_file:
      - .env-prod
    depends_on:
      - postgres
      - redis
    command: ["/pybooking/docker/run.sh"]
    ports:
      - 9000:8000

  celery:
    image: pybooking_celery
    build:
      context: .
    container_name: pybooking_celery
    command:  ["/pybooking/docker/celery.sh", "celery"]
    env_file:
      - .env-prod
    depends_on:
      - redis

  celery_beat:
    image: pybooking_celery
    build:
      context: .
    container_name: booking_celery_beat
    command: ["/pybooking/docker/celery.sh", "celery_beat"]
    env_file:
      - .env-prod
    depends_on:
      - redis


  flower:
    image: pybooking_flower
    build:
      context: .
    container_name: pybooking_flower
    command: ["/pybooking/docker/celery.sh", "flower"]
    env_file:
      - .env-prod
    ports:
      - 5555:5555
    depends_on:
      - redis

  prometheus:
   image: prom/prometheus:latest
   container_name: prometheus
   volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml
     - prometheusdata:/prometheus
   restart: unless-stopped
   ports:
     - 9090:9090

  grafana:
   image: grafana/grafana:latest
   container_name: grafana
   volumes:
     - grafanadata:/var/lib/grafana
   restart: unless-stopped
   ports:
     - 3000:3000


volumes:
  postgresdata:
  grafanadata:
  prometheusdata:
